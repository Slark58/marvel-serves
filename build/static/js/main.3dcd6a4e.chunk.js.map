{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvekService.js","resources/img/mjolnir.png","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBaundary/errorBaundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_BaseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","hompage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","props","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","upDateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","itemRef","myRef","ref","push","getFocusClass","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","onCharSelected","renderItems","disabled","Skeleton","CharInfo","updateChar","charId","prevProps","skeleton","homepage","length","ErrorBaundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dcd6a4e.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\r\n    _apiKey = 'apikey=141b0bea7dbf20cf498a499e7ecd1a09';\r\n\r\n    _BaseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        \r\n        return await res.json();\r\n    }\r\n    \r\n    getAllCharacters = async (offset = this._BaseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' +char.thumbnail.extension,\r\n            hompage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}}  src={img}\r\n        alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport MarvelService from '../../services/MarvekService';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { Component } from 'react';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nclass RandomChar extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n\n        this.upDateChar();\n        // this.timerId = setInterval(this.upDateChar, 3000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true \n        })\n    }\n\n    upDateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    \n\n    render () {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\"  onClick={this.upDateChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, hompage, wiki} = char;\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={hompage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component, React } from 'react';\n\nimport PropTypes from 'prop-types'; \n\nimport MarvelService from '../../services/MarvekService';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n\n\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n        .then(this.onCharListLoaded)\n        .catch(this.onError)\n    }\n\n    onCharListLoading = () =>  {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9\n        }))\n    }\n    \n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRef = [];\n\n    myRef = (ref) => {\n        this.itemRef.push(ref)\n    }\n\n\n    getFocusClass = (id) => {\n        this.itemRef.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRef[id].classList.add('char__item_selected');\n        this.itemRef[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.myRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id)\n                        this.getFocusClass(i);\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                    \n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n};\n\n\n\nexport default CharList;\n\n\n\n\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport { Component } from 'react';\n\nimport PropTypes from 'prop-types'; \n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvekService';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n     }\n\n\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true \n        })\n    }\n\n    render () {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ?  null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    return (\n        <>\n            <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                        {\n                            comics.length > 0 ? null : \"there is no comics with this character\"\n                        }\n\n                        {\n                            comics.map((item, i) => {\n                                // eslint-disable-next-line\n                                if (i > 9) return;\n                                return (\n                                    <li key={i} className=\"char__comics-item\">\n                                        {item.name}\n                                    </li>\n                                )\n                            })\n                        }\n\n                    \n                    \n                </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.string \n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React, { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nclass ErrorBaundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error,errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState ({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBaundary;\r\n","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\nimport { Component } from \"react\";\nimport ErrorBaundary from \"../errorBaundary/errorBaundary\";\n\nclass App extends Component {\n\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                <ErrorBaundary>\n                    <RandomChar/>\n                </ErrorBaundary>    \n                    <div className=\"char__content\">\n                    <ErrorBaundary>\n                        <CharList onCharSelected={this.onCharSelected}/>\n                    </ErrorBaundary>\n                        <ErrorBaundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBaundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport MarvelService from './services/MarvekService';\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}